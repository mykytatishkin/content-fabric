#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.
"""

import os
import sys
import shutil
from pathlib import Path

# –î–æ–±–∞–≤–∏—Ç—å –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent / "src"))

from src.config_loader import ConfigLoader
from src.logger import get_logger


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."""
    
    print("üîí –ë–ï–ó–û–ü–ê–°–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–• –ê–ö–ö–ê–£–ù–¢–û–í")
    print("=" * 55)
    
    logger = get_logger("secure_setup")
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    print("\n1. üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    config_loader = ConfigLoader()
    status = config_loader.check_env_completeness()
    
    if 'error' in status:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {status['error']}")
        return
    
    print(f"   üìä –í—Å–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ –∫–æ–Ω—Ñ–∏–≥–µ: {status['total_accounts']}")
    print(f"   ‚úÖ –í–∫–ª—é—á–µ–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {status['enabled_accounts']}")
    print(f"   üîß –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {status['configured_accounts']}")
    print(f"   üìÅ –§–∞–π–ª .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {status['env_file_exists']}")
    print(f"   üöÄ –ì–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é: {status['ready_for_use']}")
    
    if status['missing_env_vars']:
        print(f"   ‚ö†Ô∏è  –ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {len(status['missing_env_vars'])}")
        for var in sorted(status['missing_env_vars']):
            print(f"      - {var}")
    
    # –ï—Å–ª–∏ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ
    if status['ready_for_use']:
        print("\nüéâ –°–∏—Å—Ç–µ–º–∞ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        
        choice = input("\nüëâ –•–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏? (y/n): ").strip().lower()
        if choice != 'y':
            print("üëã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
            return
    
    # –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
    print("\n2. üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π–ª–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    
    env_file = Path(".env")
    env_template = Path("env_template.txt")
    
    if not env_file.exists():
        if env_template.exists():
            print(f"   üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ {env_template} –≤ {env_file}...")
            shutil.copy(env_template, env_file)
            print(f"   ‚úÖ –§–∞–π–ª {env_file} —Å–æ–∑–¥–∞–Ω")
        else:
            print(f"   ‚ùå –§–∞–π–ª {env_template} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            create_choice = input("   üëâ –°–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª? (y/n): ").strip().lower()
            
            if create_choice == 'y':
                create_basic_env_file()
            else:
                print("   ‚ö†Ô∏è  –ë–µ–∑ .env —Ñ–∞–π–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞")
                return
    else:
        print(f"   ‚úÖ –§–∞–π–ª {env_file} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    print("\n3. üîß –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö...")
    
    if not interactive_env_setup():
        print("   ‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞")
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print("\n4. ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...")
    
    new_status = config_loader.check_env_completeness()
    
    if new_status['ready_for_use']:
        print("   üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
        # –í–∫–ª—é—á–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã
        enable_choice = input("\nüëâ –í–∫–ª—é—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã? (y/n): ").strip().lower()
        if enable_choice == 'y':
            enable_accounts()
        
        # –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
        show_next_steps()
        
    else:
        print("   ‚ö†Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        if new_status['missing_env_vars']:
            print("   –ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:")
            for var in sorted(new_status['missing_env_vars']):
                print(f"      - {var}")


def create_basic_env_file():
    """–°–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª."""
    
    basic_content = """# Instagram API Configuration
INSTAGRAM_MAIN_APP_ID=your_instagram_app_id_here
INSTAGRAM_MAIN_APP_SECRET=your_instagram_app_secret_here

# TikTok API Configuration  
TIKTOK_MAIN_CLIENT_KEY=your_tiktok_client_key_here
TIKTOK_MAIN_CLIENT_SECRET=your_tiktok_client_secret_here

# YouTube API Configuration
YOUTUBE_MAIN_CLIENT_ID=your_youtube_client_id_here
YOUTUBE_MAIN_CLIENT_SECRET=your_youtube_client_secret_here

# Notification Configuration (optional)
TELEGRAM_BOT_TOKEN=your_telegram_bot_token
TELEGRAM_CHAT_ID=your_telegram_chat_id
EMAIL_USERNAME=your_email@gmail.com
EMAIL_PASSWORD=your_app_password
"""
    
    try:
        with open(".env", "w") as f:
            f.write(basic_content)
        print("   ‚úÖ –ë–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω")
        return True
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞: {e}")
        return False


def interactive_env_setup():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è."""
    
    print("\n   üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API –∫–ª—é—á–µ–π –¥–ª—è –∫–∞–∂–¥–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã...")
    print("   üí° –ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é")
    
    # –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–∫—É—â–∏–π .env
    env_vars = load_env_file()
    
    # –ì—Ä—É–ø–ø—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    var_groups = {
        "Instagram": [
            ("INSTAGRAM_MAIN_APP_ID", "Instagram App ID (–æ—Å–Ω–æ–≤–Ω–æ–π –∞–∫–∫–∞—É–Ω—Ç)"),
            ("INSTAGRAM_MAIN_APP_SECRET", "Instagram App Secret (–æ—Å–Ω–æ–≤–Ω–æ–π –∞–∫–∫–∞—É–Ω—Ç)"),
            ("INSTAGRAM_BACKUP_APP_ID", "Instagram App ID (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç)"),
            ("INSTAGRAM_BACKUP_APP_SECRET", "Instagram App Secret (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç)"),
        ],
        "TikTok": [
            ("TIKTOK_MAIN_CLIENT_KEY", "TikTok Client Key (–æ—Å–Ω–æ–≤–Ω–æ–π –∞–∫–∫–∞—É–Ω—Ç)"),
            ("TIKTOK_MAIN_CLIENT_SECRET", "TikTok Client Secret (–æ—Å–Ω–æ–≤–Ω–æ–π –∞–∫–∫–∞—É–Ω—Ç)"),
            ("TIKTOK_BACKUP_CLIENT_KEY", "TikTok Client Key (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç)"),
            ("TIKTOK_BACKUP_CLIENT_SECRET", "TikTok Client Secret (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç)"),
        ],
        "YouTube": [
            ("YOUTUBE_MAIN_CLIENT_ID", "YouTube Client ID (–æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª)"),
            ("YOUTUBE_MAIN_CLIENT_SECRET", "YouTube Client Secret (–æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª)"),
            ("YOUTUBE_BACKUP_CLIENT_ID", "YouTube Client ID (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∫–∞–Ω–∞–ª)"),
            ("YOUTUBE_BACKUP_CLIENT_SECRET", "YouTube Client Secret (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∫–∞–Ω–∞–ª)"),
        ]
    }
    
    updated_vars = {}
    
    for group_name, variables in var_groups.items():
        print(f"\n   üì± {group_name}:")
        
        setup_group = input(f"      üëâ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å {group_name}? (y/n): ").strip().lower()
        if setup_group != 'y':
            print(f"      ‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫ {group_name}")
            continue
        
        for var_name, var_description in variables:
            current_value = env_vars.get(var_name, "")
            
            if current_value and not current_value.startswith("your_"):
                print(f"      ‚úÖ {var_name}: —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ")
                continue
            
            print(f"\n      üîë {var_description}")
            if current_value:
                print(f"         –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {current_value}")
            
            new_value = input(f"      üëâ –í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ").strip()
            
            if new_value:
                updated_vars[var_name] = new_value
                print(f"      ‚úÖ {var_name} –æ–±–Ω–æ–≤–ª–µ–Ω–æ")
            else:
                print(f"      ‚è≠Ô∏è  {var_name} –ø—Ä–æ–ø—É—â–µ–Ω–æ")
    
    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    if updated_vars:
        print(f"\n   üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ {len(updated_vars)} –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö...")
        
        # –û–±–Ω–æ–≤–∏—Ç—å env_vars
        env_vars.update(updated_vars)
        
        # –ó–∞–ø–∏—Å–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ñ–∞–π–ª
        if save_env_file(env_vars):
            print("   ‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ .env")
            return True
        else:
            print("   ‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö")
            return False
    else:
        print("   ‚ö†Ô∏è  –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –∏–∑–º–µ–Ω–µ–Ω—ã")
        return True


def load_env_file():
    """–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞."""
    env_vars = {}
    
    try:
        with open(".env", "r") as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith("#") and "=" in line:
                    key, value = line.split("=", 1)
                    env_vars[key.strip()] = value.strip()
    except FileNotFoundError:
        pass
    
    return env_vars


def save_env_file(env_vars):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ .env —Ñ–∞–π–ª."""
    try:
        lines = []
        
        # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        groups = {
            "# Instagram API Configuration": [k for k in env_vars.keys() if "INSTAGRAM" in k],
            "# TikTok API Configuration": [k for k in env_vars.keys() if "TIKTOK" in k],
            "# YouTube API Configuration": [k for k in env_vars.keys() if "YOUTUBE" in k],
            "# Other Configuration": [k for k in env_vars.keys() if not any(p in k for p in ["INSTAGRAM", "TIKTOK", "YOUTUBE"])]
        }
        
        for group_header, group_vars in groups.items():
            if group_vars:
                lines.append(group_header)
                for var in sorted(group_vars):
                    lines.append(f"{var}={env_vars[var]}")
                lines.append("")
        
        with open(".env", "w") as f:
            f.write("\n".join(lines))
        
        return True
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
        return False


def enable_accounts():
    """–í–∫–ª—é—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –≤ config.yaml."""
    print("\n   üîß –í–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤...")
    
    try:
        # –ß–∏—Ç–∞—Ç—å config.yaml
        with open("config.yaml", "r") as f:
            content = f.read()
        
        # –ó–∞–º–µ–Ω–∏—Ç—å enabled: false –Ω–∞ enabled: true –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
        # –ü—Ä–æ—Å—Ç–∞—è –∑–∞–º–µ–Ω–∞ - –≤ —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å YAML –ø–∞—Ä—Å–µ—Ä
        updated_content = content.replace("enabled: false  # –≤–∫–ª—é—á–∏—Ç–µ –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ .env", "enabled: true")
        
        # –ó–∞–ø–∏—Å–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ
        with open("config.yaml", "w") as f:
            f.write(updated_content)
        
        print("   ‚úÖ –ê–∫–∫–∞—É–Ω—Ç—ã –≤–∫–ª—é—á–µ–Ω—ã –≤ config.yaml")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {e}")


def show_next_steps():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏."""
    
    print("\n" + "=" * 55)
    print("üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò")
    print("=" * 55)
    
    print("\n1. üîê –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç—ã:")
    print("   python account_manager.py authorize --all")
    
    print("\n2. ‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å:")
    print("   python account_manager.py status")
    
    print("\n3. üì§ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø—É–±–ª–∏–∫–∞—Ü–∏—é:")
    print("   python main.py post 'path/to/video.mp4' --caption 'Test post'")
    
    print("\n4. üéÆ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:")
    print("   python example_multiple_accounts.py")
    
    print("\nüîí –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨:")
    print("   - –§–∞–π–ª .env –ù–ï –¥–æ–ª–∂–µ–Ω –ø–æ–ø–∞–¥–∞—Ç—å –≤ git")
    print("   - –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ API –∫–ª—é—á–∏")
    print("   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤")


if __name__ == "__main__":
    main()
