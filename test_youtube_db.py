#!/usr/bin/env python3
"""
Test script for YouTube database integration.
"""

import sys
from pathlib import Path

# Add src directory to path
sys.path.insert(0, str(Path(__file__).parent / 'src'))

from src.database import get_database
from src.api_clients.youtube_db_client import YouTubeDBClient


def test_database():
    """Test database functionality."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    db = get_database()
    
    # Test adding channels
    print("\n1. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤...")
    success1 = db.add_channel(
        name="Teasera",
        channel_id="teasera-git",
        client_id="test_client_id_1",
        client_secret="test_client_secret_1",
        enabled=True
    )
    print(f"   Teasera: {'‚úÖ' if success1 else '‚ùå'}")
    
    success2 = db.add_channel(
        name="Andrew Garle",
        channel_id="@AndrewGarle",
        client_id="test_client_id_2",
        client_secret="test_client_secret_2",
        enabled=True
    )
    print(f"   Andrew Garle: {'‚úÖ' if success2 else '‚ùå'}")
    
    # Test listing channels
    print("\n2. –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤...")
    channels = db.get_all_channels()
    for channel in channels:
        status = "‚úÖ" if channel.enabled else "‚ùå"
        print(f"   {status} {channel.name} (ID: {channel.channel_id})")
    
    # Test getting specific channel
    print("\n3. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞...")
    channel = db.get_channel("Teasera")
    if channel:
        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω –∫–∞–Ω–∞–ª: {channel.name}")
    else:
        print("   ‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # Test token management
    print("\n4. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞–º–∏...")
    from datetime import datetime, timedelta
    expires_at = datetime.now() + timedelta(hours=1)
    
    success = db.update_channel_tokens(
        "Teasera",
        "test_access_token",
        "test_refresh_token",
        expires_at
    )
    print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤: {'‚úÖ' if success else '‚ùå'}")
    
    # Test token expiration
    is_expired = db.is_token_expired("Teasera")
    print(f"   –¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫: {'‚ùå' if is_expired else '‚úÖ'}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


def test_youtube_client():
    """Test YouTube client with database."""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ YouTube –∫–ª–∏–µ–Ω—Ç–∞...")
    
    client = YouTubeDBClient()
    
    # Test getting available channels
    print("\n1. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞–Ω–∞–ª—ã...")
    channels = client.get_available_channels()
    print(f"   –ù–∞–π–¥–µ–Ω–æ –∫–∞–Ω–∞–ª–æ–≤: {len(channels)}")
    for channel in channels:
        print(f"   - {channel}")
    
    # Test setting channel
    if channels:
        print(f"\n2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–∞–Ω–∞–ª–∞ '{channels[0]}'...")
        success = client.set_channel(channels[0])
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ' if success else '‚ùå'}")
        
        if success:
            # Test getting channel info
            print(f"\n3. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–Ω–∞–ª–µ...")
            info = client.get_channel_info()
            if info:
                print(f"   ‚úÖ –ö–∞–Ω–∞–ª: {info.get('title', 'Unknown')}")
                print(f"   –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: {info.get('subscriber_count', '0')}")
            else:
                print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ YouTube –∫–ª–∏–µ–Ω—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


def main():
    """Main test function."""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ YouTube Database Integration")
    print("=" * 50)
    
    try:
        test_database()
        test_youtube_client()
        
        print("\n" + "=" * 50)
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()


if __name__ == '__main__':
    main()
