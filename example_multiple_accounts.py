#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏.
"""

import sys
import time
from pathlib import Path
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–∏—Ç—å –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent / "src"))

from src.auto_poster import SocialMediaAutoPoster


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è."""
    
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∞–≤—Ç–æ–ø–æ—Å—Ç–µ—Ä
        auto_poster = SocialMediaAutoPoster()
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return
    
    # –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    while True:
        print("\n" + "="*60)
        print("üì± –°–ò–°–¢–ï–ú–ê –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–ú–ò –ê–ö–ö–ê–£–ù–¢–ê–ú–ò")
        print("="*60)
        print("1. üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
        print("2. üîê –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã")
        print("3. üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω—ã")
        print("4. ‚úÖ –í–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã")
        print("5. üì§ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ")
        print("6. ‚è∞ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é")
        print("7. üìã –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã")
        print("8. üõ†Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞–º–∏")
        print("9. üîç –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ")
        print("0. ‚ùå –í—ã—Ö–æ–¥")
        
        choice = input("\nüëâ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (0-9): ").strip()
        
        if choice == "0":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        elif choice == "1":
            check_accounts_status(auto_poster)
        elif choice == "2":
            authorize_accounts(auto_poster)
        elif choice == "3":
            refresh_tokens(auto_poster)
        elif choice == "4":
            validate_accounts(auto_poster)
        elif choice == "5":
            post_immediately(auto_poster)
        elif choice == "6":
            schedule_post(auto_poster)
        elif choice == "7":
            show_scheduled_posts(auto_poster)
        elif choice == "8":
            manage_tokens(auto_poster)
        elif choice == "9":
            show_system_info(auto_poster)
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        
        input("\n‚è∏Ô∏è –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")


def check_accounts_status(auto_poster: SocialMediaAutoPoster):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤."""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤...")
    
    try:
        system_status = auto_poster.get_system_status()
        account_status = system_status.get('account_status', {})
        token_status = system_status.get('token_status', {})
        
        print(f"\nüìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"   –í—Å–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {account_status.get('total_accounts', 0)}")
        print(f"   –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö: {account_status.get('authorized_accounts', 0)}")
        print(f"   –í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤: {token_status.get('total_tokens', 0)}")
        print(f"   –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤: {token_status.get('valid_tokens', 0)}")
        print(f"   –ò—Å—Ç–µ–∫—à–∏—Ö —Ç–æ–∫–µ–Ω–æ–≤: {token_status.get('expired_tokens', 0)}")
        
        for platform in ['instagram', 'tiktok', 'youtube']:
            platform_accounts = account_status.get('platforms', {}).get(platform, {})
            platform_tokens = token_status.get('platforms', {}).get(platform, {})
            
            print(f"\nüì± {platform.upper()}:")
            print(f"   –í—Å–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {platform_accounts.get('total', 0)}")
            print(f"   –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö: {platform_accounts.get('authorized', 0)}")
            
            if platform_tokens:
                print(f"   –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤: {platform_tokens.get('valid', 0)}")
                print(f"   –ò—Å—Ç–µ–∫—à–∏—Ö —Ç–æ–∫–µ–Ω–æ–≤: {platform_tokens.get('expired', 0)}")
            
            accounts = platform_accounts.get('accounts', {})
            for account_name, account_info in accounts.items():
                status_icon = "‚úÖ" if account_info.get('authorized') else "‚ùå"
                print(f"   {status_icon} {account_name}")
                
                if account_info.get('expires_at'):
                    print(f"      üïí –¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫–∞–µ—Ç: {account_info['expires_at']}")
                if account_info.get('last_refreshed'):
                    print(f"      üîÑ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {account_info['last_refreshed']}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞: {e}")


def authorize_accounts(auto_poster: SocialMediaAutoPoster):
    """–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã."""
    print("\nüîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
    print("1. –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –≤—Å–µ –∞–∫–∫–∞—É–Ω—Ç—ã")
    print("2. –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã")
    print("3. –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç")
    
    choice = input("üëâ –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç (1-3): ").strip()
    
    try:
        if choice == "1":
            print("\nüîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤...")
            results = auto_poster.authorize_all_accounts()
            
            for platform, accounts in results.items():
                print(f"\nüì± {platform.upper()}:")
                for account_name, result in accounts.items():
                    if result.get('success'):
                        print(f"   ‚úÖ {account_name} - —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
                    else:
                        print(f"   ‚ùå {account_name} - –æ—à–∏–±–∫–∞: {result.get('error')}")
        
        elif choice == "2":
            platform = input("üëâ –í–≤–µ–¥–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É (instagram/tiktok/youtube): ").strip().lower()
            if platform in ['instagram', 'tiktok', 'youtube']:
                print(f"\nüîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ {platform}...")
                results = auto_poster.authorize_all_accounts(platform)
                
                accounts = results.get(platform, {})
                for account_name, result in accounts.items():
                    if result.get('success'):
                        print(f"   ‚úÖ {account_name} - —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
                    else:
                        print(f"   ‚ùå {account_name} - –æ—à–∏–±–∫–∞: {result.get('error')}")
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞")
        
        elif choice == "3":
            platform = input("üëâ –í–≤–µ–¥–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É (instagram/tiktok/youtube): ").strip().lower()
            account = input("üëâ –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∞–∫–∫–∞—É–Ω—Ç–∞: ").strip()
            
            if platform in ['instagram', 'tiktok', 'youtube'] and account:
                print(f"\nüîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è {platform}:{account}...")
                result = auto_poster.authorize_account(platform, account)
                
                if result.get('success'):
                    print(f"‚úÖ –ê–∫–∫–∞—É–Ω—Ç {platform}:{account} —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
                    if result.get('expires_in'):
                        print(f"   üïí –¢–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω {result['expires_in']} —Å–µ–∫—É–Ω–¥")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {result.get('error')}")
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")


def refresh_tokens(auto_poster: SocialMediaAutoPoster):
    """–û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω—ã."""
    print("\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤")
    print("1. –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Ç–æ–∫–µ–Ω—ã")
    print("2. –û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã")
    print("3. –û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞")
    
    choice = input("üëâ –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç (1-3): ").strip()
    
    try:
        if choice == "1":
            print("\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–∫–µ–Ω–æ–≤...")
            results = auto_poster.refresh_account_tokens()
            
        elif choice == "2":
            platform = input("üëâ –í–≤–µ–¥–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É (instagram/tiktok/youtube): ").strip().lower()
            if platform in ['instagram', 'tiktok', 'youtube']:
                print(f"\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ {platform}...")
                results = auto_poster.refresh_account_tokens(platform=platform)
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞")
                return
        
        elif choice == "3":
            platform = input("üëâ –í–≤–µ–¥–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É (instagram/tiktok/youtube): ").strip().lower()
            account = input("üëâ –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∞–∫–∫–∞—É–Ω—Ç–∞: ").strip()
            
            if platform in ['instagram', 'tiktok', 'youtube'] and account:
                print(f"\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ {platform}:{account}...")
                results = auto_poster.refresh_account_tokens(platform=platform, account_name=account)
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
                return
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
            return
        
        # –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        for account_key, success in results.items():
            if success:
                print(f"‚úÖ {account_key} - —Ç–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω")
            else:
                print(f"‚ùå {account_key} - –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤: {e}")


def validate_accounts(auto_poster: SocialMediaAutoPoster):
    """–í–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã."""
    print("\n‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤...")
    
    try:
        results = auto_poster.validate_all_accounts_extended()
        
        for platform, accounts in results.items():
            print(f"\nüì± {platform.upper()}:")
            
            for account_name, account_info in accounts.items():
                if account_info.get('valid'):
                    print(f"   ‚úÖ {account_name} - –≤–∞–ª–∏–¥–µ–Ω")
                else:
                    print(f"   ‚ùå {account_name} - –Ω–µ–≤–∞–ª–∏–¥–µ–Ω")
                    if account_info.get('error'):
                        print(f"      üö´ –û—à–∏–±–∫–∞: {account_info['error']}")
                    
                    print(f"      üìã –î–µ—Ç–∞–ª–∏:")
                    print(f"         –í–∫–ª—é—á–µ–Ω: {account_info.get('enabled', False)}")
                    print(f"         –ï—Å—Ç—å —Ç–æ–∫–µ–Ω: {account_info.get('has_token', False)}")
                    print(f"         –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω: {account_info.get('token_valid', False)}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}")


def post_immediately(auto_poster: SocialMediaAutoPoster):
    """–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ."""
    print("\nüì§ –ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
    
    # –ü–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ –≤–∏–¥–µ–æ
    video_path = input("üëâ –í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∏–¥–µ–æ —Ñ–∞–π–ª—É: ").strip()
    if not video_path or not Path(video_path).exists():
        print("‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–ø–∏—Å—å
    caption = input("üëâ –í–≤–µ–¥–∏—Ç–µ –ø–æ–¥–ø–∏—Å—å –∫ –ø–æ—Å—Ç—É: ").strip()
    if not caption:
        caption = "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ—Å—Ç"
    
    # –í—ã–±—Ä–∞—Ç—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    print("\nüì± –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:")
    print("1. Instagram")
    print("2. TikTok") 
    print("3. YouTube")
    print("4. –í—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã")
    
    platform_choice = input("üëâ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (1,2,3) –∏–ª–∏ 4 –¥–ª—è –≤—Å–µ—Ö: ").strip()
    
    platforms = []
    if "4" in platform_choice:
        platforms = ["instagram", "tiktok", "youtube"]
    else:
        if "1" in platform_choice:
            platforms.append("instagram")
        if "2" in platform_choice:
            platforms.append("tiktok")
        if "3" in platform_choice:
            platforms.append("youtube")
    
    if not platforms:
        print("‚ùå –ù–µ –≤—ã–±—Ä–∞–Ω–∞ –Ω–∏ –æ–¥–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞")
        return
    
    # –í—ã–±—Ä–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    use_specific_accounts = input("üëâ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã? (y/n): ").strip().lower()
    accounts = None
    
    if use_specific_accounts == 'y':
        account_names = input("üëâ –í–≤–µ–¥–∏—Ç–µ –∏–º–µ–Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: ").strip()
        if account_names:
            accounts = [name.strip() for name in account_names.split(',')]
    
    try:
        print(f"\nüì§ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: {', '.join(platforms)}")
        if accounts:
            print(f"üìã –ê–∫–∫–∞—É–Ω—Ç—ã: {', '.join(accounts)}")
        
        result = auto_poster.post_immediately(
            content_path=video_path,
            platforms=platforms,
            caption=caption,
            accounts=accounts
        )
        
        print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–£–ë–õ–ò–ö–ê–¶–ò–ò:")
        print(f"   ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤: {result['successful_posts']}")
        print(f"   ‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤: {result['failed_posts']}")
        
        print(f"\nüìã –î–ï–¢–ê–õ–ò:")
        for post_result in result.get('results', []):
            platform = post_result['platform']
            account = post_result['account']
            success = post_result['success']
            
            if success:
                post_id = post_result.get('post_id', 'N/A')
                print(f"   ‚úÖ {platform}:{account} - ID: {post_id}")
            else:
                error = post_result.get('error', 'Unknown error')
                print(f"   ‚ùå {platform}:{account} - –û—à–∏–±–∫–∞: {error}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}")


def schedule_post(auto_poster: SocialMediaAutoPoster):
    """–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é."""
    print("\n‚è∞ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏")
    
    # –ü–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ –≤–∏–¥–µ–æ
    video_path = input("üëâ –í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∏–¥–µ–æ —Ñ–∞–π–ª—É: ").strip()
    if not video_path or not Path(video_path).exists():
        print("‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–ø–∏—Å—å
    caption = input("üëâ –í–≤–µ–¥–∏—Ç–µ –ø–æ–¥–ø–∏—Å—å –∫ –ø–æ—Å—Ç—É: ").strip()
    if not caption:
        caption = "–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç"
    
    # –í—ã–±—Ä–∞—Ç—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    print("\nüì± –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:")
    print("1. Instagram")
    print("2. TikTok")
    print("3. YouTube") 
    print("4. –í—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã")
    
    platform_choice = input("üëâ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (1,2,3) –∏–ª–∏ 4 –¥–ª—è –≤—Å–µ—Ö: ").strip()
    
    platforms = []
    if "4" in platform_choice:
        platforms = ["instagram", "tiktok", "youtube"]
    else:
        if "1" in platform_choice:
            platforms.append("instagram")
        if "2" in platform_choice:
            platforms.append("tiktok")
        if "3" in platform_choice:
            platforms.append("youtube")
    
    if not platforms:
        print("‚ùå –ù–µ –≤—ã–±—Ä–∞–Ω–∞ –Ω–∏ –æ–¥–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞")
        return
    
    # –í—ã–±—Ä–∞—Ç—å –≤—Ä–µ–º—è
    print("\n‚è∞ –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:")
    print("1. –ß–µ—Ä–µ–∑ 1 —á–∞—Å")
    print("2. –ß–µ—Ä–µ–∑ 6 —á–∞—Å–æ–≤")
    print("3. –ó–∞–≤—Ç—Ä–∞ –≤ —ç—Ç–æ –∂–µ –≤—Ä–µ–º—è")
    print("4. –£–∫–∞–∑–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –≤—Ä–µ–º—è")
    print("5. –°–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è (–ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é)")
    
    time_choice = input("üëâ –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç (1-5): ").strip()
    
    scheduled_time = None
    
    if time_choice == "1":
        scheduled_time = datetime.now() + timedelta(hours=1)
    elif time_choice == "2":
        scheduled_time = datetime.now() + timedelta(hours=6)
    elif time_choice == "3":
        scheduled_time = datetime.now() + timedelta(days=1)
    elif time_choice == "4":
        time_str = input("üëâ –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è (YYYY-MM-DD HH:MM): ").strip()
        try:
            scheduled_time = datetime.strptime(time_str, "%Y-%m-%d %H:%M")
        except ValueError:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏")
            return
    # –î–ª—è –≤–∞—Ä–∏–∞–Ω—Ç–∞ 5 –æ—Å—Ç–∞–≤–ª—è–µ–º scheduled_time = None (—Å–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è)
    
    try:
        print(f"\n‚è∞ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏...")
        if scheduled_time:
            print(f"   üïí –í—Ä–µ–º—è: {scheduled_time}")
        else:
            print(f"   üé≤ –í—Ä–µ–º—è: —Å–ª—É—á–∞–π–Ω–æ–µ (–ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é)")
        
        scheduled_ids = auto_poster.schedule_post(
            content_path=video_path,
            platforms=platforms,
            caption=caption,
            scheduled_time=scheduled_time
        )
        
        print(f"\n‚úÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(scheduled_ids)}")
        for post_id in scheduled_ids:
            print(f"   üìã ID –ø–æ—Å—Ç–∞: {post_id}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")


def show_scheduled_posts(auto_poster: SocialMediaAutoPoster):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã."""
    print("\nüìã –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã")
    
    try:
        scheduled_posts = auto_poster.get_scheduled_posts()
        
        if not scheduled_posts:
            print("üì≠ –ù–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤")
            return
        
        print(f"üìä –í—Å–µ–≥–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: {len(scheduled_posts)}")
        
        for post in scheduled_posts:
            print(f"\nüìÑ –ü–æ—Å—Ç ID: {post.id}")
            print(f"   üì± –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {post.platform}")
            print(f"   üë§ –ê–∫–∫–∞—É–Ω—Ç: {post.account}")
            print(f"   üïí –í—Ä–µ–º—è: {post.scheduled_time}")
            print(f"   üìÅ –§–∞–π–ª: {post.content_path}")
            print(f"   üìù –ü–æ–¥–ø–∏—Å—å: {post.caption[:50]}{'...' if len(post.caption) > 50 else ''}")
            print(f"   üîÑ –ü–æ–ø—ã—Ç–æ–∫: {post.retry_count}")
            print(f"   üìä –°—Ç–∞—Ç—É—Å: {post.status}")
        
        # –û–ø—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        print(f"\nüõ†Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–º–∏:")
        print("1. –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ—Å—Ç")
        print("2. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        print("0. –ù–∞–∑–∞–¥")
        
        choice = input("üëâ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()
        
        if choice == "1":
            post_id = input("üëâ –í–≤–µ–¥–∏—Ç–µ ID –ø–æ—Å—Ç–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã: ").strip()
            if post_id:
                success = auto_poster.cancel_post(post_id)
                if success:
                    print(f"‚úÖ –ü–æ—Å—Ç {post_id} –æ—Ç–º–µ–Ω–µ–Ω")
                else:
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ—Å—Ç {post_id}")
        
        elif choice == "2":
            stats = auto_poster.get_posting_stats()
            print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û–°–¢–û–í:")
            print(f"   üì§ –í—Å–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {stats.get('total_posts', 0)}")
            print(f"   ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö: {stats.get('successful_posts', 0)}")
            print(f"   ‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö: {stats.get('failed_posts', 0)}")
            print(f"   ‚è∞ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {stats.get('scheduled_posts', 0)}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å—Ç–æ–≤: {e}")


def manage_tokens(auto_poster: SocialMediaAutoPoster):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞–º–∏."""
    print("\nüõ†Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞–º–∏")
    print("1. –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–∫–µ–Ω–µ")
    print("2. –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –≤—Ä—É—á–Ω—É—é")
    print("3. –£–¥–∞–ª–∏—Ç—å —Ç–æ–∫–µ–Ω")
    print("4. –ü–æ–ª—É—á–∏—Ç—å URL –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    
    choice = input("üëâ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-4): ").strip()
    
    try:
        if choice == "1":
            platform = input("üëâ –í–≤–µ–¥–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É (instagram/tiktok/youtube): ").strip().lower()
            account = input("üëâ –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∞–∫–∫–∞—É–Ω—Ç–∞: ").strip()
            
            if platform in ['instagram', 'tiktok', 'youtube'] and account:
                info = auto_poster.get_account_token_info(platform, account)
                
                if info:
                    print(f"\nüìä –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –¢–û–ö–ï–ù–ï:")
                    print(f"   üì± –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {info['platform']}")
                    print(f"   üë§ –ê–∫–∫–∞—É–Ω—Ç: {info['account_name']}")
                    print(f"   üîÑ –ï—Å—Ç—å refresh —Ç–æ–∫–µ–Ω: {info['has_refresh_token']}")
                    print(f"   üïí –ò—Å—Ç–µ–∫–∞–µ—Ç: {info['expires_at'] or '–ù–∏–∫–æ–≥–¥–∞'}")
                    print(f"   üìÖ –°–æ–∑–¥–∞–Ω: {info['created_at'] or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}")
                    print(f"   üîÑ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {info['last_refreshed'] or '–ù–∏–∫–æ–≥–¥–∞'}")
                    print(f"   ‚ö†Ô∏è –ò—Å—Ç–µ–∫: {'–î–∞' if info['is_expired'] else '–ù–µ—Ç'}")
                    
                    if info.get('scope'):
                        print(f"   üîê –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞: {info['scope']}")
                else:
                    print(f"‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è {platform}:{account}")
        
        elif choice == "2":
            platform = input("üëâ –í–≤–µ–¥–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É (instagram/tiktok/youtube): ").strip().lower()
            account = input("üëâ –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∞–∫–∫–∞—É–Ω—Ç–∞: ").strip()
            access_token = input("üëâ –í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞: ").strip()
            refresh_token = input("üëâ –í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): ").strip() or None
            expires_str = input("üëâ –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): ").strip()
            
            expires_in = None
            if expires_str:
                try:
                    expires_in = int(expires_str)
                except ValueError:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏")
                    return
            
            if platform in ['instagram', 'tiktok', 'youtube'] and account and access_token:
                success = auto_poster.add_account_token(
                    platform=platform,
                    account_name=account,
                    access_token=access_token,
                    refresh_token=refresh_token,
                    expires_in=expires_in
                )
                
                if success:
                    print(f"‚úÖ –¢–æ–∫–µ–Ω –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è {platform}:{account}")
                else:
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–ª—è {platform}:{account}")
        
        elif choice == "3":
            platform = input("üëâ –í–≤–µ–¥–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É (instagram/tiktok/youtube): ").strip().lower()
            account = input("üëâ –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∞–∫–∫–∞—É–Ω—Ç–∞: ").strip()
            
            if platform in ['instagram', 'tiktok', 'youtube'] and account:
                confirm = input(f"‚ö†Ô∏è –£–¥–∞–ª–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–ª—è {platform}:{account}? (y/n): ").strip().lower()
                
                if confirm == 'y':
                    success = auto_poster.remove_account_token(platform, account)
                    
                    if success:
                        print(f"‚úÖ –¢–æ–∫–µ–Ω —É–¥–∞–ª–µ–Ω –¥–ª—è {platform}:{account}")
                    else:
                        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–ª—è {platform}:{account}")
        
        elif choice == "4":
            platform = input("üëâ –í–≤–µ–¥–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É (instagram/tiktok/youtube): ").strip().lower()
            account = input("üëâ –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∞–∫–∫–∞—É–Ω—Ç–∞: ").strip()
            
            if platform in ['instagram', 'tiktok', 'youtube'] and account:
                url = auto_poster.get_account_authorization_url(platform, account)
                
                if url:
                    print(f"\nüîó URL –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò:")
                    print(f"{url}")
                    print("\nüìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
                else:
                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞–º–∏: {e}")


def show_system_info(auto_poster: SocialMediaAutoPoster):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ."""
    print("\nüîç –ü–û–î–†–û–ë–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ò–°–¢–ï–ú–ï")
    
    try:
        system_status = auto_poster.get_system_status()
        
        print(f"\nüñ•Ô∏è –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´:")
        print(f"   üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {system_status.get('config_loaded', False)}")
        print(f"   ‚è∞ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç: {system_status.get('scheduler_running', False)}")
        print(f"   üì§ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤: {system_status.get('scheduled_posts_count', 0)}")
        
        print(f"\nüîå API –ö–õ–ò–ï–ù–¢–´:")
        api_clients = system_status.get('api_clients', {})
        for platform, status in api_clients.items():
            status_icon = "‚úÖ" if status else "‚ùå"
            print(f"   {status_icon} {platform.upper()}")
        
        print(f"\nüì¨ –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø:")
        notifications = system_status.get('notification_status', {})
        for channel, status in notifications.items():
            status_icon = "‚úÖ" if status else "‚ùå"
            print(f"   {status_icon} {channel.upper()}")
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        test_notifications = input("\nüëâ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è? (y/n): ").strip().lower()
        if test_notifications == 'y':
            print("\nüìß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
            test_results = auto_poster.test_notifications()
            
            for channel, success in test_results.items():
                if success:
                    print(f"   ‚úÖ {channel.upper()} - —Ç–µ—Å—Ç –ø—Ä–æ—à–µ–ª")
                else:
                    print(f"   ‚ùå {channel.upper()} - —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {e}")


if __name__ == "__main__":
    main()
