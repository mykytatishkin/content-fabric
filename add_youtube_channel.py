#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è YouTube –∫–∞–Ω–∞–ª–æ–≤ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.
"""

import argparse
import yaml
import sys
from pathlib import Path

def add_youtube_channel(channel_name, channel_id=None, enabled=True):
    """–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π YouTube –∫–∞–Ω–∞–ª –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é."""
    
    config_path = "config.yaml"
    
    # –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    with open(config_path, 'r', encoding='utf-8') as f:
        config = yaml.safe_load(f)
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∫–∞–Ω–∞–ª
    existing_channels = config.get('accounts', {}).get('youtube', [])
    for channel in existing_channels:
        if channel.get('name') == channel_name:
            print(f"‚ùå –ö–∞–Ω–∞–ª '{channel_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            return False
    
    # –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª
    new_channel = {
        'name': channel_name,
        'channel_id': channel_id or f"{channel_name.lower()}-channel",
        'client_id': "${YOUTUBE_MAIN_CLIENT_ID}",
        'client_secret': "${YOUTUBE_MAIN_CLIENT_SECRET}",
        'credentials_file': "credentials.json",
        'enabled': enabled
    }
    
    existing_channels.append(new_channel)
    config['accounts']['youtube'] = existing_channels
    
    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    with open(config_path, 'w', encoding='utf-8') as f:
        yaml.dump(config, f, default_flow_style=False, allow_unicode=True, sort_keys=False)
    
    print(f"‚úÖ –ö–∞–Ω–∞–ª '{channel_name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é!")
    return True

def list_youtube_channels():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö YouTube –∫–∞–Ω–∞–ª–æ–≤."""
    
    config_path = "config.yaml"
    
    with open(config_path, 'r', encoding='utf-8') as f:
        config = yaml.safe_load(f)
    
    channels = config.get('accounts', {}).get('youtube', [])
    
    if not channels:
        print("üì≠ YouTube –∫–∞–Ω–∞–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    print("üì∫ YouTube –∫–∞–Ω–∞–ª—ã:")
    for i, channel in enumerate(channels, 1):
        status = "‚úÖ" if channel.get('enabled', False) else "‚ùå"
        channel_id = channel.get('channel_id', '–Ω–µ —É–∫–∞–∑–∞–Ω')
        print(f"  {i}. {status} {channel['name']} (ID: {channel_id})")

def main():
    parser = argparse.ArgumentParser(description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ YouTube –∫–∞–Ω–∞–ª–∞–º–∏")
    subparsers = parser.add_subparsers(dest='command', help='–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã')
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞
    add_parser = subparsers.add_parser('add', help='–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª')
    add_parser.add_argument('name', help='–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞')
    add_parser.add_argument('--channel-id', help='ID –∫–∞–Ω–∞–ª–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)')
    add_parser.add_argument('--disabled', action='store_true', help='–î–æ–±–∞–≤–∏—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–º')
    
    # –ö–æ–º–∞–Ω–¥–∞ —Å–ø–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤
    subparsers.add_parser('list', help='–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤')
    
    args = parser.parse_args()
    
    if args.command == 'add':
        enabled = not args.disabled
        add_youtube_channel(args.name, args.channel_id, enabled)
    elif args.command == 'list':
        list_youtube_channels()
    else:
        parser.print_help()

if __name__ == '__main__':
    main()
